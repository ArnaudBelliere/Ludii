(define "NextCanNotMove"
    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King" Next)))))
)

(define "KingNotCheckedAndToEmpty"
    (and 
        (is Empty (to)) 
        (not ("IsInCheck" "King" Mover at:(to)))
    ) 
)

(define "SetEnPassantLocation"
    (then 
        (set Pending (ahead (last To) Backward))
    )
)

(define "InLocationEnPassant"
    (and 
        (is Pending) 
        (= (to) (value Pending)) 
    )
)

(define "EnPassant"
    (move
        Step 
        (directions {FR FL}) 
        (to if:"InLocationEnPassant") 
        (then 
            (remove 
                (ahead (last To) Backward)
            )
        )
    )
)

//------------------------------------------------------------------------------

(game "Zerg Chess" 
    ("TwoPlayersNorthSouth") 
    (equipment { 
        (board (square 8)) 
        
        ("ChessPawn" "Pawn"
            (or 
                (if (and 
                        (= (who at:(from)) P1) 
                        (is In (from) (sites Start (piece (what at:(from)))))
                    )
                    ("DoubleStepForwardToEmpty" "SetEnPassantLocation")
                )
                "EnPassant"
            )
            (then 
                (and
                    ("ReplayInMovingOn" (sites Mover "Promotion"))
                    (set Counter)
                )
            )
        )
        
        ("ChessRook" "Rook" (then (set Counter)))
        ("ChessKing" "King" (then (set Counter)))
        ("ChessBishop" "Bishop" (then (set Counter)))
        ("ChessKnight" "Knight" (then (set Counter)))
        ("ChessQueen" "Queen" (then (set Counter)))
        
        (regions "Promotion" P1 (sites Top))
        (regions "Promotion" P2 (sites Bottom))
    }) 
    (rules 
        (start { 
            (place "Pawn1" (sites Row 1))
            (place "Pawn2" (union {(sites Row 5) (sites Row 6) (sites Row 4) (difference (sites Row 7) (sites {"D8" "E8"})) (difference (sites Row 3) (sites {"A4" "B4" "C4" "F4" "G4" "H4"}))}))
            (place "Rook1" (sites Random (sites Bottom)))
            (place "King1" (sites Random (intersection (sites Bottom) (sites Empty))))
            (place "Rook1" (sites Random (intersection (sites Bottom) (sites Empty))))
            (place "Bishop1" (sites Random (intersection (sites Bottom) (sites Empty))))
            (place "Bishop1" (sites Random (intersection (sites Bottom) (sites Empty))))
            (place "Knight1" (sites Random (intersection (sites Bottom) (sites Empty)) num:2))
            (place "Queen1" (sites Random (intersection (sites Bottom) (sites Empty))))
        })
        
        (play 
            (if "SameTurn"
                (move Promote (last To) (piece {"Queen" "Knight" "Bishop" "Rook"}) Mover)
                (if (is Mover P1)
                    (do 
                        (forEach Piece)
                        ifAfterwards:(not ("IsInCheck" "King" Mover))
                    )
                    (forEach Piece)
                )
            )
        )
        
        (end {
            (if (and 
                    (is Mover P1)
                    (no Pieces P2)
                ) 
                (result P1 Win)
            ) 
            (if (and {
                    (is Mover P2)
                    ("IsInCheck" "King" Next)
                    (not (can Move (do (forEach Piece Next) ifAfterwards:(not ("IsInCheck" "King" Next)))))
                }) 
                (result P2 Win)
            ) 
            (if (or (no Moves Mover) (= (counter) 100)) (result Mover Draw)) 
        })
    )
)

//------------------------------------------------------------------------------

(metadata 
    
    (info
        {
        (description "Zerg Chess is a game.")
        (rules "The game has rules.")
        (credit "Dennis Soemers")
        }
    )
    
    (graphics {
        (piece Scale "Pawn" 0.825)
        (piece Families {"Defined" "Microsoft" "Pragmata" "Symbola"})
        (board Style Chess)
    })
    
    (ai 
        "Horde Chess_ai"
    )
    
)

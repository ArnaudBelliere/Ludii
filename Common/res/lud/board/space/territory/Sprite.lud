(define "ComputeScoreNeutral"
	(if 
		(and 
			(= (score Mover) 0)
			(>= (size Array (array (intersection (sites Around (last To)) (sites Occupied by:Mover)))) (score Next))
		)
		(and
			(set Score Mover (- (size Array (array (intersection (sites Around (last To)) (sites Occupied by:Mover)))) (score Next)))
			(set Score Next 0)
		)
		(if
			(and 
				(= (score Mover) 0)
				(< (size Array (array (intersection (sites Around (last To)) (sites Occupied by:Mover)))) (score Next))
			)
			(set Score Next (- (score Next) (size Array (array (intersection (sites Around (last To)) (sites Occupied by:Mover))))))
			(addScore Mover (size Array (array (intersection (sites Around (last To)) (sites Occupied by:Mover)))))
		)
	)
)

(define "ComputeScoreNormal"
		(if 
			(and 
				(= (score Mover) 0)
				(>= (size Array (array (intersection (sites Around (last To)) (sites Occupied by:Neutral)))) (score Next))
			)
			(and
				(set Score Mover (- (size Array (array (intersection (sites Around (last To)) (sites Occupied by:Neutral)))) (score Next)))
				(set Score Next 0)
			)
			(if
				(and 
					(= (score Mover) 0)
					(< (size Array (array (intersection (sites Around (last To)) (sites Occupied by:Neutral)))) (score Next))
				)
				(set Score Next (- (score Next) (size Array (array (intersection (sites Around (last To)) (sites Occupied by:Neutral))))))
				(addScore Mover (size Array (array (intersection (sites Around (last To)) (sites Occupied by:Neutral)))))
			)
		)
	)

//------------------------------------------------------------------------------

(game "Sprite" 
    (players 2) 
    (equipment { 
        (board (square 4 pyramidal:True) use:Vertex) 
        (piece "Ball" Each)
        (piece "Ball" Neutral)
        (hand Each)
        (hand Shared)
    }) 
    (rules 
		(start {
        	(place "Ball" "Hand" count:16)
        	(place "Ball0" 32 count:16)
        })
    	(play 
			(if
    			(and (is Prev Mover) (= (count Sites in:(sites Occupied by:All)) 2))
    			(move 
    				(from (handSite Shared)) 
    	    		(to 
    	    			(sites Empty) 
    	    			if:(is Flat)
    	    		)
    	    		(then 
    	    			"ComputeScoreNeutral"
	    	    	)
    	    	)
	    		(if
	    			(not ((is Prev Mover)))
	    			(or
		    			(move 
		    				(from (handSite Mover)) 
		    	    		(to 
		    	    			(sites Empty) 
		    	    			if:(is Flat)
		    	    		)
		    	    		(then 
			    	    		(and {
		    	    				"ComputeScoreNormal"
		    	    				(moveAgain)
		    	    			})
			    	    	)
		    	    	)
		    			(move 
		    				(from (handSite Shared))
		    	    		(to 
		    	    			(sites Empty) 
		    	    			if:(is Flat)
		    	    		)
		    	    		(then
			    	    		(and {
			    	    			"ComputeScoreNeutral"
		    	    				(moveAgain)
		    	    			})
			    	    	)
		    	    	)
	    			)
	    			(if
			    		(is Prev Mover)
	    				(or
    		    			(move 
    		    				(from (handSite Mover)) 
    		    	    		(to 
    		    	    			(sites Empty) 
    		    	    			if:(is Flat)
    		    	    		)
    		    	    		(then 
    			    	    		(and {
    		    	    				"ComputeScoreNormal"
    			    	    			(if (= (count Sites in:(sites Occupied by:All)) 2) (moveAgain))
    		    	    			})
    			    	    	)
    		    	    	)
    		    			(move 
    		    				(from (handSite Shared))
    		    	    		(to 
    		    	    			(sites Empty) 
    		    	    			if:(is Flat)
    		    	    		)
    		    	    		(then
    			    	    		(and {
    			    	    			"ComputeScoreNeutral"
    			    	    			(if (= (count Sites in:(sites Occupied by:All)) 2) (moveAgain))
    		    	    			})
    			    	    	)
    		    	    	)
    	    			)
			    	)
	    		)
	    	)
    	)
    	(end
        	(if 
        		(= (count Pieces in:(sites Occupied by:All container:"Board")) 30)
                (byScore)
            )        	
    	)	
    )
)

//------------------------------------------------------------------------------

(metadata 
		
		(info
			{
			}
		)
    
		(graphics {
	        (piece Scale "Ball" 1.0)
	        (board Style Shibumi)
	        (piece Colour Neutral fillColour:(colour Red))
			(piece Colour P1 fillColour:(colour White))
			(piece Colour P2 fillColour:(colour Black))
	    })
       
)